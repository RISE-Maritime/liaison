# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import fmi3_pb2 as fmi3__pb2


class fmi3Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.instantiateCoSimulation = channel.unary_unary(
                '/proto.fmi3/instantiateCoSimulation',
                request_serializer=fmi3__pb2.Empty.SerializeToString,
                response_deserializer=fmi3__pb2.Instance.FromString,
                )
        self.freeInstance = channel.unary_unary(
                '/proto.fmi3/freeInstance',
                request_serializer=fmi3__pb2.Instance.SerializeToString,
                response_deserializer=fmi3__pb2.Empty.FromString,
                )
        self.doStep = channel.unary_unary(
                '/proto.fmi3/doStep',
                request_serializer=fmi3__pb2.Instance.SerializeToString,
                response_deserializer=fmi3__pb2.Empty.FromString,
                )
        self.getContinuousStates = channel.unary_unary(
                '/proto.fmi3/getContinuousStates',
                request_serializer=fmi3__pb2.Instance.SerializeToString,
                response_deserializer=fmi3__pb2.Array.FromString,
                )
        self.getDerivatives = channel.unary_unary(
                '/proto.fmi3/getDerivatives',
                request_serializer=fmi3__pb2.Instance.SerializeToString,
                response_deserializer=fmi3__pb2.Array.FromString,
                )
        self.enterInitializationMode = channel.unary_unary(
                '/proto.fmi3/enterInitializationMode',
                request_serializer=fmi3__pb2.enterInitializationModeRequest.SerializeToString,
                response_deserializer=fmi3__pb2.Empty.FromString,
                )
        self.exitInitializationMode = channel.unary_unary(
                '/proto.fmi3/exitInitializationMode',
                request_serializer=fmi3__pb2.Instance.SerializeToString,
                response_deserializer=fmi3__pb2.Empty.FromString,
                )
        self.getFloat64 = channel.unary_unary(
                '/proto.fmi3/getFloat64',
                request_serializer=fmi3__pb2.getValue64Request.SerializeToString,
                response_deserializer=fmi3__pb2.getFloat64Reply.FromString,
                )
        self.terminate = channel.unary_unary(
                '/proto.fmi3/terminate',
                request_serializer=fmi3__pb2.Instance.SerializeToString,
                response_deserializer=fmi3__pb2.Empty.FromString,
                )


class fmi3Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def instantiateCoSimulation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def freeInstance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def doStep(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getContinuousStates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDerivatives(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def enterInitializationMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def exitInitializationMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getFloat64(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def terminate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_fmi3Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'instantiateCoSimulation': grpc.unary_unary_rpc_method_handler(
                    servicer.instantiateCoSimulation,
                    request_deserializer=fmi3__pb2.Empty.FromString,
                    response_serializer=fmi3__pb2.Instance.SerializeToString,
            ),
            'freeInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.freeInstance,
                    request_deserializer=fmi3__pb2.Instance.FromString,
                    response_serializer=fmi3__pb2.Empty.SerializeToString,
            ),
            'doStep': grpc.unary_unary_rpc_method_handler(
                    servicer.doStep,
                    request_deserializer=fmi3__pb2.Instance.FromString,
                    response_serializer=fmi3__pb2.Empty.SerializeToString,
            ),
            'getContinuousStates': grpc.unary_unary_rpc_method_handler(
                    servicer.getContinuousStates,
                    request_deserializer=fmi3__pb2.Instance.FromString,
                    response_serializer=fmi3__pb2.Array.SerializeToString,
            ),
            'getDerivatives': grpc.unary_unary_rpc_method_handler(
                    servicer.getDerivatives,
                    request_deserializer=fmi3__pb2.Instance.FromString,
                    response_serializer=fmi3__pb2.Array.SerializeToString,
            ),
            'enterInitializationMode': grpc.unary_unary_rpc_method_handler(
                    servicer.enterInitializationMode,
                    request_deserializer=fmi3__pb2.enterInitializationModeRequest.FromString,
                    response_serializer=fmi3__pb2.Empty.SerializeToString,
            ),
            'exitInitializationMode': grpc.unary_unary_rpc_method_handler(
                    servicer.exitInitializationMode,
                    request_deserializer=fmi3__pb2.Instance.FromString,
                    response_serializer=fmi3__pb2.Empty.SerializeToString,
            ),
            'getFloat64': grpc.unary_unary_rpc_method_handler(
                    servicer.getFloat64,
                    request_deserializer=fmi3__pb2.getValue64Request.FromString,
                    response_serializer=fmi3__pb2.getFloat64Reply.SerializeToString,
            ),
            'terminate': grpc.unary_unary_rpc_method_handler(
                    servicer.terminate,
                    request_deserializer=fmi3__pb2.Instance.FromString,
                    response_serializer=fmi3__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.fmi3', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class fmi3(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def instantiateCoSimulation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.fmi3/instantiateCoSimulation',
            fmi3__pb2.Empty.SerializeToString,
            fmi3__pb2.Instance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def freeInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.fmi3/freeInstance',
            fmi3__pb2.Instance.SerializeToString,
            fmi3__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def doStep(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.fmi3/doStep',
            fmi3__pb2.Instance.SerializeToString,
            fmi3__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getContinuousStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.fmi3/getContinuousStates',
            fmi3__pb2.Instance.SerializeToString,
            fmi3__pb2.Array.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getDerivatives(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.fmi3/getDerivatives',
            fmi3__pb2.Instance.SerializeToString,
            fmi3__pb2.Array.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def enterInitializationMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.fmi3/enterInitializationMode',
            fmi3__pb2.enterInitializationModeRequest.SerializeToString,
            fmi3__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def exitInitializationMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.fmi3/exitInitializationMode',
            fmi3__pb2.Instance.SerializeToString,
            fmi3__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getFloat64(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.fmi3/getFloat64',
            fmi3__pb2.getValue64Request.SerializeToString,
            fmi3__pb2.getFloat64Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def terminate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.fmi3/terminate',
            fmi3__pb2.Instance.SerializeToString,
            fmi3__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
